
# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: s4u/maven-settings-action@v2.3.0
      with:
        servers: |
          [{
              "id": "github-banzai",
              "username": "${{ secrets.GH_PACKAGE_USER }}",
              "password": "${{ secrets.GH_PACKAGE_TOKEN }}"
          }]
    - name: Maven verify
      run: mvn -B verify
    - name: Maven run tests
      run: mvn -B test
    - name: Maven build package
      run: mvn -B package
    - name: Get jar name
      id: get-jar-name
      run: |
        echo ::set-output name=jar::$(ls -1 ./target/*.jar |grep -v test)
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: lwgs-person-data-processor.jar
        path: ${{ steps.get-jar-name.outputs.jar }}

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Setup release package workdir
        run: |
          mkdir -p release
          cp -r README.md COPYRIGHT LICENSE doc release/
      - name: Download artefact
        uses: actions/download-artifact@v1
        with:
          name: lwgs-person-data-processor.jar
          path: ./release/
      - name: Create release ZIP
        run: |
          cd ./release && zip ../lwgs-person-data-processor.zip * && cd -
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
            # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object,
            # which include a `upload_url`.
            # See this blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./lwgs-person-data-processor.zip
          asset_name: lwgs-person-data-processor-${{ steps.get_tag.outputs.TAG }}.zip
          asset_content_type: application/zip