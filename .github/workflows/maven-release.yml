
# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
        cache: maven
    - name: Get the tag (without leading v)
      id: get_tag
      run: echo "release_tag_version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: Maven verify
      run: mvn -B verify
    - name: Maven run tests
      run: mvn -B test
    - name: Maven set version
      run: mvn -B versions:set -DnewVersion=${{ env.release_tag_version }}
    - name: Maven build package
      run: mvn -B package -Dmaven.test.skip
    - name: Maven deploy to mvn repository
      run: mvn -B deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: lgs-person-data-processor-artifacts
        path: |
          target/*.jar
          !target/*-SNAPSHOT.jar
          !target/*-test.jar

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup release package workdir
        run: |
          mkdir -p release
          cp -r README.md COPYRIGHT LICENSE doc release/
      - name: Download artefact
        uses: actions/download-artifact@v3
        with:
          name: lgs-person-data-processor-artifacts
          path: ./release/
      - name: Create source release ZIP
        run: |
          cd ./release && zip -r ../lgs-person-data-processor.zip * && cd -
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Get the tag
        id: get_tag
        run: echo "release_tag=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
            # This pulls from the CREATE RELEASE step above, referencing its ID to get its outputs object,
            # which include a `upload_url`.
            # See this blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./lgs-person-data-processor.zip
          asset_name: lgs-person-data-processor-${{ env.release_tag }}.zip
          asset_content_type: application/zip
